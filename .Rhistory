rootNode<-xmlRoot(doc)
xmlName(rootNode)
doc<-xmlTreeParse(fileUrl,useInternal = TRUE)
doc<-htmlTreeParse(fileUrl,useInternal = TRUE)
doc<-xmlTreeParse(fileUrl,useInternal = TRUE)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
date<-read.table(fileUrl,sep=";")
View(date)
date<-read.table(fileUrl,sep=",")
View(date)
date<-read.table(fileUrl,sep=",",header=TRUE)
View(date)
DT<-read.table(fileUrl,sep=",",header=TRUE)
View(DT)
DT$pwgt15
DT$pwgtp15
install.packages("foreign")
library(foreign)
data<-read.fortran("getdata-wksst8110.for", c("Week","SST","SSTA","SST","SSTA","SST","SSTA","SST","SSTA"))
data<-read.fortran("getdata-wksst8110.for", c("rAl"))
data<-read.fortran("getdata-wksst8110.for", c("rAl"))
q5_df <- read.fwf(file = "./data/q5_data.for", widths = c(15, 4, 1, 3, 5, 4), header = FALSE, sep = "\t", skip = 4)
head(q5_df)
q5_df <- read.fwf(file = "./data/q5_data.for", widths = c(15, 4, 1, 3, 5, 4), header = FALSE, sep = "\t", skip = 4)
q5_df <- read.fwf(fi#le = "./data/q5_data.for", widths = c(15, 4, 1, 3, 5, 4), header = FALSE, sep = "\t", skip = 4)
data<-read.fortran("getdata-wksst8110.for", c("rAl"))
q5_df <- read.fwf(file = "getdata-wksst8110.for", widths = c(15, 4, 1, 3, 5, 4), header = FALSE, sep = "\t", skip = 4)
q5_df <- read.fwf("getdata-wksst8110.for", widths = c(15, 4, 1, 3, 5, 4), header = FALSE, sep = "\t", skip = 4)
data<-read.fortran("getdata-wksst8110.for", c(9,4,4,4,4,4,4,4,4))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
library(httr)
require(httpuv)
require(jsonlite)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
#    Insert your values below - if secret is omitted, it will look it up in
#    the GITHUB_CONSUMER_SECRET environmental variable.
#
#    Use http://localhost:1410 as the callback url
myapp <- oauth_app("quiz2", "ddb0d599de51ccd02f4b", secret="6af1109f6ecf442d292425087d49bb13d9bbe9c8")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
output
output[[1]]$name
output[[2]]$name
output[[3]]$name
output[[4]]$name
output[[5]]$name
output[[6]]$name
output[[7]]$name
output[[8]]$name
output[[9]]$name
output[[10]]$name
output[[11]]$name
output[[12]]$name
output[[13]]$name
output[[14]]$name
output[[15]]$name
output[[16]]$name
output[[17]]$name
output[[18]]$name
output[[18]]$name
output[[19]]$name
output[[20]]$name
output[[21]]$name
output[[22]]$name
output[[23]]$name
output[[11]]$created_at
connection <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(connection)
close(connection)
c(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), nchar(htmlCode[100]))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
install.packages("tensorflow")
library(tensorflow)
install.package("Swirl")
install.packages("Swirl")
install.packages("swirl")
library(swirl)
swirl()
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl
swirl()
swirl()
packageVersion(swirl)
packageVersion("swirl")
swirl()
swirl()
swirl()
swirl()
swirl()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
swirl_options(restart)
swirl_options(restart)
reset(swirl())
swirl
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
summary(ppm)
quantile(ppm)
boxplot(ppm, color="blue")
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col="green", breaks = 100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), vol="magenta",lwd=4)
abline(v=median(ppm), col="magenta",lwd=4)
names(pollution)
table(pollution$fips)
reg<-table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25~region)
boxplot(pollution$pm25~pollution$region, col="red")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution, region["east"])
east<-subset(pollution, region["east"=TRUE])
east<-subset(pollution, pollution$region["east"=TRUE])
?
1
east<-subset(pollution, pollution$region="east")
east<-subset(pollution, pollution$region=="east")
east<-subset(pollution, region=="east")
head(east)
hist(east$pm25,col="green")
hist(subset(pollution, region="west"),col="green")
hist(subset(pollution, region=="west"),col="green")
hist(subset(pollution, region=="west")$pm25,col="green")
with(pollution,plot(latitude,pm25))
abline(h=12)
abline(h=12,lwd=2)
abline(h=12,lwd=2,lty=2)
abline(h=12,lwd=2)
plot(pollution$lattitude, ppm,col=pollution$region)
plot(pollution$lattitude, ppm, col=pollution$region)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
west<-subset(pollution, region=="west")
plot(west$latitude,westp$pm25,main="West")
View(west)
plot(west$latitude, westp$pm25, main="West")
plot(west$latitude, west$pm25, main="West")
plot(east$latitude, east$pm25, main="Esst")
plot(east$latitude, east$pm25, main="East")
?Devices
plot(eruptions,waiting)
faithful
with(faithful(plot(eruptions,waiting)))
with(faithful,(plot(eruptions,waiting)))
with(faithful,plot(eruptions,waiting))
annotation_custom(main="Old Faithful Geyser data")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,"geyserplot.png")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,dist))
test(mean(cars$speed),max(cars$dist),"SWIRL rules!")
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region,data = state,layout=c(4,1))
xyplot(Life.Exp ~ Income | region,data = state,layout=c(2,2))
ggplot2(mpg)
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy,data=mpg)
library (swirl)
swirl()
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone(ppb)",col.axis="blue", col.lab="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue", col.lab="red")
boxplot(main="Ozone and Wind in New York City")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue", col.lab="red", main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(wind, ozone))
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone,type="n")
title(main="Wind and Ozone in NYC")
may<-subset(airquality$Month=5)
may<-subset(airquality$Month==5)
may<-subset(airquality,airquality$month=5)
may<-subset(airquality,month=5)
may<-subset(airquality,month==5)
may<-subset(airquality,Month==5)
points(may$Wind, may$Ozone, col="blue", pch=24)
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay<-subset(airquality,month!=5)
notmay<-subset(airquality,Month!=5)
point(notmay$Wind, notmay$Ozone, col="red", pch=8)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", pch=c(17,8), col=c("blue","red"), legend=c("May","Other Months"))
vline
abline (lty=2, lwd=2)
abline(v=median(airquality$Wind),lty=2,lwd=2).
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar, main="Ozone and Solar Radiation")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow(c(1,3), mar=c(4,4,2,1,), oma=c(0,0,2,0)))
par(mfrow(c(1,3), mar=c(4,4,2,1,), oma=c(0,0,2,0))
)
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weaterh in New York City", outer=TRUE)
mtext("Ozone and Weater in New York City", outer=TRUE)
mtext("Ozone and Weather in New York City", outer=TRUE)
library(prophet)
library(prophet)
library(prophet)
library(lattice)
lpoints(l)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(datasets)
data("airquality")
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
install.packages("lattice")
install.packages("lattice")
library(lattice)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(lattice)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
libary(ggplot2)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies) + geom_smooth()
ggplot2package(movies)
install.packages("ggplot2moviews")
library(ggplot2movies)
install.packages("ggplot2movies")
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
swirl
library(swirl)
swirl()
exit
1
library(lattice)
library(ggplot2)
library(swirl)
swirt
swirl
swirl()
dist(dataFrame)
hclust(distxy)
hc<-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.5,col="blue")
abline(h=.5,col="red")
abline(h=.4,col="red")
5
9
12
abline(h=.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,mean,which.min)
apply(distTmp,mean[,],which.min)
apply(distTmp,which.min)
apply(distTmp,mean,which.min)
apply(distTmp,2,which.in
)
apply(distTmp,2,which.min)
points(1,99+3,25)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.in)
apply(distTmp2,2,which.min)
recolor(x,y,pch=19,cex=2,col=cols1[newClust2])
color(x,y,pch=19,cex=2,col=cols1[newClust2])
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCy,finalCy,col=cols1,pch=9,cex=2,lwd=2)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
u%*%diag%*%v
matu%*%t(matv)
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-svd1$u[,1]%*%svd1$d[1]
a1<-svd1$u[,1]*svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
image(a1)
myImage(a1)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
library(swirl)
swirl()
a2<-svd1$u[,1:2]%*%svd1$d[1:2,]
a2<-svd1$u[,1:2]%*%daig(svd1$d[1:2,])
a2<-svd1$u[,1:2]%*%diag(svd1$d[1:2,])
a2<-svd1$u[,1:2]%*%diag(svd1$d[1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subset(ssd,subject=TRUE)
sub1<-subset(ssd,subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(c(1:6))
mdist<-dist(sub1[,1:3])
hclustering<-hclust(midst)
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
mdist<-dist(sub1[10:12])
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering,unclass(sub1$activity))
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
svd1$u
dim(svd1$u)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclusterin<-hclust(mdist)
hclustering<-hclust(mdist)
myplclust(hclusterin,lab.col=unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust<-kmeans(sub1,centers=6)
kClust<-kmeans(sub1,centers=6)
kClust<-kmeans(sub1,6)
kClust<-kmeans(sub1[,-562],6)
kClust<-kmeans(sub1[,c(-562,-563)],6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster,sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 3)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 3,nstart = 100)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6,nstart = 100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying<-which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
setwd("/Users/cjaehn/Documents/Exploratory Data Analysis/Final Assignment")
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#Across the United States, how have emissions from coal
#combustion-related sources changed from 1999–2008?
coal<-SCC[grep("coal",SCC$Short.Name),]
Coal<-SCC[grep("Coal",SCC$Short.Name),]
coal<-rbind(coal,Coal)
NEI_coal<-NEI[]
library(ggplot2)
View(coal)
NEI_coal<-df[match(coal$SCC, NEI$SCC), ]
coal<-coal$SCC
head(coal)
str(coal)
coal<-SCC[grep("coal",SCC$Short.Name),]
Coal<-SCC[grep("Coal",SCC$Short.Name),]
coal<-SCC[grep("coal",SCC$Short.Name),]
Coal<-SCC[grep("Coal",SCC$Short.Name),]
coal<-rbind(coal,Coal)
coal<-unique(coal$SCC)
coal<-SCC[grep("coal",SCC$Short.Name),]
Coal<-SCC[grep("Coal",SCC$Short.Name),]
coal<-rbind(coal,Coal)
coal<-unique(coal$SCC)
NEI_coal<-NEI[match(coal$SCC,NEI$SCC), ]
NEI_coal<-NEI[match(coal,NEI$SCC), ]
NEI_coal<-subset(NEI, NEI$SCC %in% coal)
png(file="plot4.png")
barplot(height = totalemission$x,names.arg = totalemission$Group.1,xlab="Year",ylab="PM2.5 emitted (tons)",main="Development of total PM2.5 emitted (US)")
dev.off()
barplot(height = totalemission$x,names.arg = totalemission$Group.1,xlab="Year",ylab="PM2.5 emitted (tons)",main="Development of total PM2.5 emitted (US)")
NEI_coal<-subset(NEI, NEI$SCC %in% coal)
totalemission<-aggregate(NEI_coal$Emissions, sum, by=list(NEI_coal$year) )
png(file="plot4.png")
barplot(height = totalemission$x,names.arg = totalemission$Group.1,xlab="Year",ylab="PM2.5 emitted (tons)",main="Development of total PM2.5 emitted (US)")
dev.off()
barplot(height = totalemission$x,names.arg = totalemission$Group.1,xlab="Year",ylab="PM2.5 emitted (tons)",main="Development of total PM2.5 emitted (US)")
barplot(height = totalemission$x,names.arg = totalemission$Group.1,xlab="Year",ylab="PM2.5 emitted (tons)",main="Development of coal combusted total PM2.5 emitted (US)")
png(file="plot4.png")
barplot(height = totalemission$x,names.arg = totalemission$Group.1,xlab="Year",ylab="PM2.5 emitted (tons)",main="Development of coal combusted total PM2.5 emitted (US)")
dev.off()
str(SCC)
View(SCC)
